plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id 'com.google.firebase.crashlytics'
    id 'com.google.android.gms.oss-licenses-plugin'
}

android {

    namespace "com.kishore.news"
    compileSdk 34

    defaultConfig {
        applicationId "com.kishore.news"
        minSdk 21
        targetSdk 34
        versionCode 1
        versionName "1.1"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    signingConfigs {
        releaseConfig {
            keyAlias 'anki'
            keyPassword 'kumar_123'
            storeFile file('./keystore/Anki.jks')
            storePassword 'kumar_123'
        }
    }
    buildTypes {
        debug {
            debuggable true
        }
        release {
            minifyEnabled true
            signingConfig signingConfigs.releaseConfig
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    flavorDimensions "ui"

    productFlavors {

        legacyui {
            apply from: "src/legacyui/legacy.gradle"
            dimension "ui"
        }

        composeui {
            apply from: "src/composeui/compose.gradle"
            applicationId = "com.kishore.development"
            dimension "ui"
        }
    }

    sourceSets {
        legacyui {
            res.srcDirs += 'src/legacyui/res'
            java.srcDirs += 'src/legacyui/java'
        }
        composeui {
            java.srcDirs += 'src/composeui/java'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }

    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }

    buildTypes.each {
        it.buildConfigField('String', 'NEWS_API_KEY', NEWS_API_KEY)
    }

    tasks.whenTaskAdded { task ->
        if ((task.name ==~ /preLegacyui.*/) || (task.name ==~ /installLegacyui.*/)) {
            task.doFirst() {
                cp("legacyui")
            }
        } else if ((task.name ==~ /preComposeui.*/) || (task.name ==~ /installComposeui.*/)) {
            task.doFirst() {
                cp("composeui")
            }
        }
    }

}

def cp(flavor) {
    println "copying " +  flavor + "google json "
    copy {
        from "src/" + flavor +"/"
        include '*.json'
        into '.'
    }
}
configurations {
    composeuiDebugImplementation
}

kapt {
    correctErrorTypes true
    arguments {
        arg("room.schemaLocation", "$projectDir/schemas")
    }
}

dependencies {

    def nav_version = "2.7.5"
    def hilt_version = "2.48.1"

    //common
    implementation 'androidx.core:core-ktx:1.9.0'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines:0.19.2'
  //  implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.3.1'

    implementation 'com.google.android.gms:play-services-oss-licenses:17.0.0'

    //work manager
    implementation 'androidx.work:work-runtime-ktx:2.7.1'

    //retrofit
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.okhttp3:okhttp:5.0.0-alpha.10'
    implementation 'com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:0.9.2'

    //room
    implementation 'androidx.room:room-runtime:2.6.0'
    implementation 'com.github.bumptech.glide:glide:4.13.2'
    kapt 'androidx.room:room-compiler:2.6.0'


    // Import the BoM for the Firebase platform
    implementation platform('com.google.firebase:firebase-bom:31.1.1')

    // Declare the dependency for the Analytics library
    // When using the BoM, you don't specify versions in Firebase library dependencies
    implementation 'com.google.firebase:firebase-analytics-ktx'
    implementation 'com.google.firebase:firebase-crashlytics-ktx'
    //FCM
    implementation 'com.google.firebase:firebase-messaging-ktx'
    //In app Messaging
    implementation 'com.google.firebase:firebase-inappmessaging-display-ktx'
    //ads id
    implementation("androidx.ads:ads-identifier:1.0.0-alpha01")

    //material
    implementation 'com.google.android.material:material:1.4.0'

    // Hilt
    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-android-compiler:$hilt_version"
    implementation 'androidx.hilt:hilt-work:1.1.0'
    kapt 'androidx.hilt:hilt-compiler:1.1.0'

    //preference & DataStore
    implementation 'androidx.preference:preference:1.2.0'
    implementation 'androidx.datastore:datastore-preferences:1.0.0'


    //legacy
    legacyuiImplementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    legacyuiImplementation 'androidx.appcompat:appcompat:1.4.1'
    legacyuiImplementation 'androidx.recyclerview:recyclerview:1.2.1'
    legacyuiImplementation 'androidx.cardview:cardview:1.0.0'
    legacyuiImplementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    legacyuiImplementation "androidx.navigation:navigation-ui-ktx:$nav_version"

    // ViewModel and LiveData
    legacyuiImplementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.6.2'


    //compose
    composeuiImplementation platform('androidx.compose:compose-bom:2023.10.01')
    composeuiImplementation "androidx.compose.ui:ui"
    //composeuiImplementation "androidx.compose.material:material"
    composeuiImplementation "androidx.compose.material3:material3"
    composeuiImplementation "androidx.compose.ui:ui-tooling-preview"
    composeuiImplementation 'androidx.activity:activity-compose'
    composeuiImplementation "androidx.compose.runtime:runtime-livedata"
    composeuiImplementation 'androidx.constraintlayout:constraintlayout-compose:1.0.1'
    composeuiImplementation "io.coil-kt:coil-compose:2.2.1"
    composeuiImplementation "androidx.navigation:navigation-compose:$nav_version"

    composeuiImplementation "androidx.hilt:hilt-navigation-compose:1.1.0"
    // add to include because of compile time issue after updating kotlin version
    implementation "androidx.compose.runtime:runtime"


    // unit testing
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    androidTestComposeuiImplementation "androidx.compose.ui:ui-test-junit4"

    // For instrumentation tests
    androidTestImplementation  "com.google.dagger:hilt-android-testing:$hilt_version"
    kaptAndroidTest "com.google.dagger:hilt-compiler:$hilt_version"
    // For local unit tests
    testImplementation "com.google.dagger:hilt-android-testing:$hilt_version"
    kaptTest "com.google.dagger:hilt-compiler:$hilt_version"

//    need to create configuration to avoid sync error
    composeuiDebugImplementation "androidx.compose.ui:ui-test-manifest"
    composeuiDebugImplementation "androidx.compose.ui:ui-tooling"

}

apply plugin: 'com.google.gms.google-services'